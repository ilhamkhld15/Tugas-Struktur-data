class Node:
    def _init_(self, data):
        self.data = data
        self.next = None
        self.prev = None
class DoubleLinkedList:
    def _init_(self):
        self.head = None
    def append(self, data):
        if self.head is None:
            new_node = Node(data)
            new_node = new_node
            
        else:
            new_node = Node(data)
            cur = self.head
            while cur.next:
                cur = cur.next
            cur.next = new_node
            new_node.prev = cur
            new_node.next = None
    def prepend(self, data):
        if self.head is None:
            new_node = Node(data)
            new_node.next = self.head
            self.head = new_node
            
        else:
            new_node = Node(data)
            self.head.prev = new_node
            new_node.next = self .head
            self.head = new_node
            new_node.prev = None
    def add_after(self, key, data):
        cur = self.head
        while cur:
            if cur.head is None and cur.data == key:
                self.append(data)
            elif cur.data == key:
                new_node = Node(data)
                nxt = cur.next
                cur.next = new_node
                new_node.next = nxt
                nxt.prev = new_node
            cur = cur.next
    def add_before(self, key, data):
        cur = self.head
        while cur:
            if cur.prev is None and cur.data == key:
                self.prepend(data)
            elif cur.data == key:
                new_node = Node(data)
                prev = cur.prev
                prev.next = new_node
                cur.prev = new_node
                new_node.next = cur
            cur = cur.next
            
    def print_list(self):
        cur = self.head
        while cur:
            print(cur.data)
            cur = cur.next
            
            
list = DoubleLinkedList()
list.prepend(1)
list.append(2)
list.append(3)
list.append(4)
list.append(5)
list.prepend(6)
list.add_after(3,6)
list.add_before(7,8)

list.print_list()
